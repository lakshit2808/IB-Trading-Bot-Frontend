{"ast":null,"code":"import _slicedToArray from\"C:/Users/Lakshit/Desktop/Bots/C - Bot/ib_frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect}from'react';import Popup from'./popupmodal/popup';import axios from'axios';import Card from'./Card';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var BotList=function BotList(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),modal=_useState2[0],setModal=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),botList=_useState4[0],setBotList=_useState4[1];var deleteBotHandler=function deleteBotHandler(index,ticker){var encoded=encodeURI(\"https://tradingviewsignal.herokuapp.com/v1/bot1/userinput?ticker=\".concat(ticker));var tempList=botList;botList.splice(index,1);setBotList(tempList);axios.delete(encoded).then(function(res){window.location.reload();console.log(res.data);});};useEffect(function(){axios.get('https://tradingviewsignal.herokuapp.com/v1/bot1/userinput').then(function(res){setBotList(res.data);});},[]);var addBotHandler=function addBotHandler(botData){axios.post('https://tradingviewsignal.herokuapp.com/v1/bot1/userinput',{'ticker':botData.ticker,'StopLoss':botData.StopLoss,'TakeProfit':botData.TakeProfit,'AmountToBeInvested':botData.AmountToBeInvested}).then(function(res){return console.log(res);});};var toggle=function toggle(){setModal(!modal);};var saveBot=function saveBot(botObj){var tempList=botList;tempList.push(botObj);console.log(botObj);addBotHandler(botObj);setBotList(botList);setModal(false);};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"header text-center\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Interactive Broker's Trading Bots\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-primary mt-2\",onClick:function onClick(){return setModal(true);},children:\"Create Bot\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"task-container\",children:botList&&botList.map(function(obj,index){return/*#__PURE__*/_jsx(Card,{Object:obj,index:index,deleteBot:deleteBotHandler});})}),/*#__PURE__*/_jsx(Popup,{modal:modal,toggle:toggle,save:saveBot})]});};export default BotList;","map":{"version":3,"sources":["C:/Users/Lakshit/Desktop/Bots/C - Bot/ib_frontend/src/components/botlist.js"],"names":["React","useState","useEffect","Popup","axios","Card","BotList","modal","setModal","botList","setBotList","deleteBotHandler","index","ticker","encoded","encodeURI","tempList","splice","delete","then","res","window","location","reload","console","log","data","get","addBotHandler","botData","post","StopLoss","TakeProfit","AmountToBeInvested","toggle","saveBot","botObj","push","map","obj"],"mappings":"uIAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,CAAyBC,SAAzB,KAAyC,OAAzC,CACA,MAAOC,CAAAA,KAAP,KAAkB,oBAAlB,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,IAAP,KAAiB,QAAjB,C,6IAEA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,EAAM,CACpB,cAA0BL,QAAQ,CAAC,KAAD,CAAlC,wCAAOM,KAAP,eAAcC,QAAd,eACA,eAA8BP,QAAQ,CAAC,EAAD,CAAtC,yCAAOQ,OAAP,eAAgBC,UAAhB,eAEA,GAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACC,KAAD,CAAOC,MAAP,CAAkB,CACzC,GAAMC,CAAAA,OAAO,CAAGC,SAAS,4EAAqEF,MAArE,EAAzB,CACA,GAAIG,CAAAA,QAAQ,CAAGP,OAAf,CACAA,OAAO,CAACQ,MAAR,CAAeL,KAAf,CAAsB,CAAtB,EACAF,UAAU,CAACM,QAAD,CAAV,CACAZ,KAAK,CAACc,MAAN,CAAaJ,OAAb,EACMK,IADN,CACW,SAAAC,GAAG,CAAI,CACVC,MAAM,CAACC,QAAP,CAAgBC,MAAhB,GACAC,OAAO,CAACC,GAAR,CAAYL,GAAG,CAACM,IAAhB,EACD,CAJP,EAKD,CAVD,CAYAxB,SAAS,CAAC,UAAK,CACbE,KAAK,CAACuB,GAAN,CAAU,2DAAV,EACCR,IADD,CACM,SAAAC,GAAG,CAAI,CACXV,UAAU,CAACU,GAAG,CAACM,IAAL,CAAV,CACD,CAHD,EAID,CALQ,CAKP,EALO,CAAT,CAQA,GAAME,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,OAAD,CAAa,CACjCzB,KAAK,CAAC0B,IAAN,CAAW,2DAAX,CAAwE,CACtE,SAAUD,OAAO,CAAChB,MADoD,CAC5C,WAAYgB,OAAO,CAACE,QADwB,CACd,aAAcF,OAAO,CAACG,UADR,CACoB,qBAAsBH,OAAO,CAACI,kBADlD,CAAxE,EAEGd,IAFH,CAEQ,SAAAC,GAAG,QAAII,CAAAA,OAAO,CAACC,GAAR,CAAYL,GAAZ,CAAJ,EAFX,EAGD,CAJD,CAMA,GAAMc,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,EAAM,CACnB1B,QAAQ,CAAC,CAACD,KAAF,CAAR,CACD,CAFD,CAIA,GAAM4B,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACC,MAAD,CAAY,CAC1B,GAAIpB,CAAAA,QAAQ,CAAGP,OAAf,CACAO,QAAQ,CAACqB,IAAT,CAAcD,MAAd,EACAZ,OAAO,CAACC,GAAR,CAAYW,MAAZ,EACAR,aAAa,CAACQ,MAAD,CAAb,CACA1B,UAAU,CAACD,OAAD,CAAV,CACAD,QAAQ,CAAC,KAAD,CAAR,CACD,CAPD,CAWA,mBACE,wCACA,aAAK,SAAS,CAAC,oBAAf,wBACE,yDADF,cAEE,eAAQ,SAAS,CAAC,sBAAlB,CAA0C,OAAO,CAAI,yBAAMA,CAAAA,QAAQ,CAAC,IAAD,CAAd,EAArD,wBAFF,GADA,cAMA,YAAK,SAAS,CAAC,gBAAf,UACGC,OAAO,EAAIA,OAAO,CAAC6B,GAAR,CAAY,SAACC,GAAD,CAAO3B,KAAP,qBAAiB,KAAC,IAAD,EAAM,MAAM,CAAI2B,GAAhB,CAAqB,KAAK,CAAI3B,KAA9B,CAAqC,SAAS,CAAGD,gBAAjD,EAAjB,EAAZ,CADd,EANA,cASA,KAAC,KAAD,EAAO,KAAK,CAAIJ,KAAhB,CAAuB,MAAM,CAAI2B,MAAjC,CAAyC,IAAI,CAAIC,OAAjD,EATA,GADF,CAeD,CA5DD,CA8DA,cAAe7B,CAAAA,OAAf","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport Popup from './popupmodal/popup';\r\nimport axios from 'axios';\r\nimport Card from './Card';\r\n\r\nconst BotList = () => {\r\n  const [modal, setModal] = useState(false);\r\n  const [botList, setBotList] = useState([])\r\n\r\n  const deleteBotHandler = (index,ticker) => {\r\n    const encoded = encodeURI(`https://tradingviewsignal.herokuapp.com/v1/bot1/userinput?ticker=${ticker}`);\r\n    let tempList = botList\r\n    botList.splice(index, 1)\r\n    setBotList(tempList)\r\n    axios.delete(encoded)\r\n         .then(res => {\r\n            window.location.reload()\r\n            console.log(res.data) \r\n          });\r\n  };\r\n\r\n  useEffect(() =>{\r\n    axios.get('https://tradingviewsignal.herokuapp.com/v1/bot1/userinput')\r\n    .then(res => {\r\n      setBotList(res.data);\r\n    })\r\n  },[])\r\n\r\n\r\n  const addBotHandler = (botData) => {\r\n    axios.post('https://tradingviewsignal.herokuapp.com/v1/bot1/userinput', {\r\n      'ticker': botData.ticker, 'StopLoss': botData.StopLoss, 'TakeProfit': botData.TakeProfit, 'AmountToBeInvested': botData.AmountToBeInvested})\r\n      .then(res => console.log(res))\r\n  };\r\n\r\n  const toggle = () => {\r\n    setModal(!modal);\r\n  }\r\n\r\n  const saveBot = (botObj) => {\r\n    let tempList = botList\r\n    tempList.push(botObj)\r\n    console.log(botObj)\r\n    addBotHandler(botObj)\r\n    setBotList(botList)\r\n    setModal(false)\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n    <div className='header text-center'>\r\n      <h3>Interactive Broker's Trading Bots</h3>\r\n      <button className='btn btn-primary mt-2'  onClick = {() => setModal(true)}>Create Bot</button>\r\n    </div>\r\n\r\n    <div className='task-container'>\r\n      {botList && botList.map((obj , index) => <Card Object = {obj} index = {index} deleteBot= {deleteBotHandler}/>)}\r\n    </div>\r\n    <Popup modal = {modal} toggle = {toggle} save = {saveBot}></Popup>\r\n\r\n    </>\r\n    \r\n  );\r\n}\r\n\r\nexport default BotList"]},"metadata":{},"sourceType":"module"}