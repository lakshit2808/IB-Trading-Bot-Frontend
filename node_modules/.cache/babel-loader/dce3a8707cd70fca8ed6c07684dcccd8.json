{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lakshit\\\\Desktop\\\\Bots\\\\C - Bot\\\\ib_frontend\\\\src\\\\components\\\\popupmodal\\\\EditBot.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Modal, ModalBody, ModalHeader, ModalFooter, Button } from 'reactstrap';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditBot = _ref => {\n  _s();\n\n  let {\n    modal,\n    toggle,\n    update,\n    Object\n  } = _ref;\n\n  const updateBotHandler = ticker => {\n    axios.patch(`https://tradingviewsignal.herokuapp.com/v1/bot1/userinput?ticker=${ticker}`, {\n      ticker: Object.ticker,\n      StopLoss: Object.StopLoss,\n      TakeProfit: Object.TakeProfit,\n      AmountToBeInvested: Object.AmountToBeInvested\n    }).then(response => {\n      console.log(response);\n    });\n  };\n\n  const [ticker, setTicker] = useState('');\n  const [stoploss, setStoploss] = useState('');\n  const [amount, setAmount] = useState('');\n  const [takeprofit, setTakeprofit] = useState('');\n  useEffect(() => {}, []);\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n\n    if (name === \"ticker\") {\n      setTicker(value);\n    } else if (name === \"stoploss\") {\n      setStoploss(value);\n    } else if (name === \"amount\") {\n      setAmount(value);\n    } else if (name === \"takeprofit\") {\n      setTakeprofit(value);\n    }\n  };\n\n  const handleSave = e => {\n    e.preventDefault();\n    let taskObj = {};\n    taskObj[\"ticker\"] = ticker;\n    taskObj[\"StopLoss\"] = stoploss;\n    taskObj[\"TakeProfit\"] = takeprofit;\n    taskObj[\"AmountToBeInvested\"] = amount;\n    update(taskObj);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: modal,\n      toggle: toggle,\n      children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n        toggle: toggle,\n        children: \"Update Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Task Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            value: taskName,\n            onChange: handleChange,\n            name: \"taskName\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            rows: \"5\",\n            className: \"form-control\",\n            value: description,\n            onChange: handleChange,\n            name: \"description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          onClick: handleUpdate,\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 5\n        }, this), ' ', /*#__PURE__*/_jsxDEV(Button, {\n          color: \"secondary\",\n          onClick: toggle,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EditBot, \"ds1JldNW//q7CZgdd6yh0N+eTwo=\");\n\n_c = EditBot;\nexport default EditBot;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditBot\");","map":{"version":3,"sources":["C:/Users/Lakshit/Desktop/Bots/C - Bot/ib_frontend/src/components/popupmodal/EditBot.js"],"names":["React","useState","useEffect","Modal","ModalBody","ModalHeader","ModalFooter","Button","axios","EditBot","modal","toggle","update","Object","updateBotHandler","ticker","patch","StopLoss","TakeProfit","AmountToBeInvested","then","response","console","log","setTicker","stoploss","setStoploss","amount","setAmount","takeprofit","setTakeprofit","handleChange","e","name","value","target","handleSave","preventDefault","taskObj","taskName","description","handleUpdate"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { Modal, ModalBody, ModalHeader, ModalFooter, Button } from 'reactstrap';\r\nimport axios from 'axios';\r\n\r\nconst EditBot = ({modal, toggle, update, Object}) => {\r\n\r\n    const updateBotHandler = (ticker) => {\r\n        axios.patch(`https://tradingviewsignal.herokuapp.com/v1/bot1/userinput?ticker=${ticker}`, {\r\n            ticker: Object.ticker, StopLoss: Object.StopLoss, TakeProfit: Object.TakeProfit, AmountToBeInvested: Object.AmountToBeInvested\r\n          })\r\n          .then(response => {\r\n            console.log(response);\r\n          })\r\n        }\r\n\r\n    const [ticker, setTicker] = useState('');\r\n    const [stoploss, setStoploss] = useState('');\r\n    const [amount, setAmount] = useState('');\r\n    const [takeprofit, setTakeprofit] = useState('');\r\n\r\n    useEffect(() => {\r\n\r\n    },[])\r\n\r\n    const handleChange = (e) => {\r\n        \r\n        const {name, value} = e.target\r\n\r\n        if(name === \"ticker\"){\r\n            setTicker(value)\r\n        }else if(name === \"stoploss\"){\r\n            setStoploss(value)\r\n        }else if(name === \"amount\"){\r\n            setAmount(value)\r\n        }else if(name === \"takeprofit\"){\r\n            setTakeprofit(value)\r\n        }\r\n    }\r\n    const handleSave = (e) => {\r\n        e.preventDefault()\r\n        let taskObj = {}\r\n        taskObj[\"ticker\"] = ticker\r\n        taskObj[\"StopLoss\"] = stoploss\r\n        taskObj[\"TakeProfit\"] = takeprofit\r\n        taskObj[\"AmountToBeInvested\"] = amount\r\n        update(taskObj)\r\n\r\n    }\r\n\r\n  return (\r\n    <div>\r\n    <Modal isOpen={modal} toggle={toggle}>\r\n    <ModalHeader toggle={toggle}>Update Task</ModalHeader>\r\n    <ModalBody>\r\n    \r\n            <div className = \"form-group\">\r\n                <label>Task Name</label>\r\n                <input type=\"text\" className = \"form-control\" value = {taskName} onChange = {handleChange} name = \"taskName\"/>\r\n            </div>\r\n            <div className = \"form-group\">\r\n                <label>Description</label>\r\n                <textarea rows = \"5\" className = \"form-control\" value = {description} onChange = {handleChange} name = \"description\"></textarea>\r\n            </div>\r\n        \r\n    </ModalBody>\r\n    <ModalFooter>\r\n    <Button color=\"primary\" onClick={handleUpdate}>Update</Button>{' '}\r\n    <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\r\n    </ModalFooter>\r\n</Modal>    \r\n \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default EditBot"]},"metadata":{},"sourceType":"module"}