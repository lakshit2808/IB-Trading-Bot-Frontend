{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lakshit\\\\Desktop\\\\Bots\\\\C - Bot\\\\ib_frontend\\\\src\\\\components\\\\botlist.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Popup from './popupmodal/popup';\nimport axios from 'axios';\nimport Card from './Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst BotList = () => {\n  _s();\n\n  const [modal, setModal] = useState(false);\n  const [botList, setBotList] = useState([]);\n\n  const deleteTodoHandler = ticker => {\n    const encoded = encodeURI(`https://tradingviewsignal.herokuapp.com/v1/bot1/userinput${ticker}`);\n    axios.delete(encoded).then(res => {\n      console.log(res.data);\n    });\n  };\n\n  useEffect(() => {\n    axios.get('https://tradingviewsignal.herokuapp.com/v1/bot1/userinput').then(res => {\n      setBotList(res.data);\n    });\n  }, []);\n\n  const deleteTask = index => {\n    let tempList = botList;\n    botList.splice(index, 1);\n    setBotList(tempList);\n    window.location.reload();\n  };\n\n  const addBotHandler = botData => {\n    axios.post('https://tradingviewsignal.herokuapp.com/v1/bot1/userinput', {\n      'ticker': botData.ticker,\n      'StopLoss': botData.StopLoss,\n      'TakeProfit': botData.TakeProfit,\n      'AmountToBeInvested': botData.AmountToBeInvested\n    }).then(res => console.log(res));\n  };\n\n  const toggle = () => {\n    setModal(!modal);\n  };\n\n  const saveBot = botObj => {\n    let tempList = botList;\n    tempList.push(botObj);\n    console.log(botObj);\n    /* Fast API Post Here */\n\n    addBotHandler(botObj);\n    setBotList(botList);\n    setModal(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Interactive Broker's Trading Bots\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary mt-2\",\n        onClick: () => setModal(true),\n        children: \"Create Bot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-container\",\n      children: botList && botList.map((obj, index) => /*#__PURE__*/_jsxDEV(Card, {\n        Object: obj,\n        index: index\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 48\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Popup, {\n      modal: modal,\n      toggle: toggle,\n      save: saveBot\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\n_s(BotList, \"RaaqJZqdpNmOsdQlLKaGAnPrYtk=\");\n\n_c = BotList;\nexport default BotList;\n\nvar _c;\n\n$RefreshReg$(_c, \"BotList\");","map":{"version":3,"sources":["C:/Users/Lakshit/Desktop/Bots/C - Bot/ib_frontend/src/components/botlist.js"],"names":["React","useState","useEffect","Popup","axios","Card","BotList","modal","setModal","botList","setBotList","deleteTodoHandler","ticker","encoded","encodeURI","delete","then","res","console","log","data","get","deleteTask","index","tempList","splice","window","location","reload","addBotHandler","botData","post","StopLoss","TakeProfit","AmountToBeInvested","toggle","saveBot","botObj","push","map","obj"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport Popup from './popupmodal/popup';\r\nimport axios from 'axios';\r\nimport Card from './Card';\r\n\r\nconst BotList = () => {\r\n  const [modal, setModal] = useState(false);\r\n  const [botList, setBotList] = useState([])\r\n\r\n  const deleteTodoHandler = (ticker) => {\r\n    const encoded = encodeURI(`https://tradingviewsignal.herokuapp.com/v1/bot1/userinput${ticker}`);\r\n    axios.delete(encoded)\r\n         .then(res => {\r\n            console.log(res.data) \r\n          });\r\n  };\r\n\r\n  useEffect(() =>{\r\n    axios.get('https://tradingviewsignal.herokuapp.com/v1/bot1/userinput')\r\n    .then(res => {\r\n      setBotList(res.data);\r\n    })\r\n  },[])\r\n\r\n  const deleteTask = (index) => {\r\n    let tempList = botList\r\n    botList.splice(index, 1)\r\n    setBotList(tempList)\r\n    window.location.reload()\r\n}\r\n\r\n  const addBotHandler = (botData) => {\r\n    axios.post('https://tradingviewsignal.herokuapp.com/v1/bot1/userinput', {\r\n      'ticker': botData.ticker, 'StopLoss': botData.StopLoss, 'TakeProfit': botData.TakeProfit, 'AmountToBeInvested': botData.AmountToBeInvested})\r\n      .then(res => console.log(res))\r\n  };\r\n\r\n  const toggle = () => {\r\n    setModal(!modal);\r\n  }\r\n\r\n  const saveBot = (botObj) => {\r\n    let tempList = botList\r\n    tempList.push(botObj)\r\n    console.log(botObj)\r\n    /* Fast API Post Here */\r\n    addBotHandler(botObj)\r\n    setBotList(botList)\r\n    setModal(false)\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n    <div className='header text-center'>\r\n      <h2>Interactive Broker's Trading Bots</h2>\r\n      <button className='btn btn-primary mt-2'  onClick = {() => setModal(true)}>Create Bot</button>\r\n    </div>\r\n\r\n    <div className='task-container'>\r\n      {botList && botList.map((obj , index) => <Card Object = {obj} index = {index} />)}\r\n    </div>\r\n    <Popup modal = {modal} toggle = {toggle} save = {saveBot}></Popup>\r\n\r\n    </>\r\n    \r\n  );\r\n}\r\n\r\nexport default BotList"]},"metadata":{},"sourceType":"module"}